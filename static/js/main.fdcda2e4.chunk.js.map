{"version":3,"sources":["store/actions/main.js","store/actions/actionTypes.js","components/EditableTable.js","components/AddData.js","components/Search.js","App.js","serviceWorker.js","store/reducers/main.js","store/configureStore.js","index.js"],"names":["dataSource","item","type","EditableCell","state","value","props","editable","handleChange","e","target","setState","check","onChange","edit","this","className","onPressEnter","onClick","Component","EditableTable","onCellChange","key","dataIndex","find","onDataSource","onDelete","supplier","filter","columns","title","width","sorter","render","text","record","length","onConfirm","theme","twoToneColor","bordered","connect","main","dispatch","AddData","loading","visible","isFill","validation","name","address","phone","inputHandler","event","_toggleModal","_onRefresh","onKeyword","dataSourceTmp","_onSave","setTimeout","_onCancle","onOk","onCancel","maskClosable","footer","disabled","layout","style","textAlign","gutter","span","Item","hasFeedback","label","validateStatus","prefix","color","bind","WrappedHorizontalLoginForm","Form","create","keyword","Search","searchInput","_onSearch","onDataSourceTmp","data","toLowerCase","search","marginBottom","icon","block","console","log","Content","Layout","Sider","App","padding","background","borderRight","minHeight","Boolean","window","location","hostname","match","initialState","reducer","action","rootReducer","combineReducers","mainReducer","composeEnhancers","compose","store","createStore","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdcda2e4.chunk.js","sourcesContent":["import { DATA_SOURCE, DATA_SOURCE_TMP, KEYWORD } from './actionTypes'\n\nexport const dataSource = (item) => {\n    return {\n        type: DATA_SOURCE,\n        dataSource: item\n    }\n}\n\nexport const dataSourceTmp = (item) => {\n    return {\n        type: DATA_SOURCE_TMP,\n        dataSourceTmp: item\n    }\n}\n\nexport const keyword = (item) => {\n    return {\n        type: KEYWORD,\n        keyword: item\n    }\n}","export const DATA_SOURCE = 'DATA_SOURCE'\nexport const DATA_SOURCE_TMP = 'DATA_SOURCE_TMP'\nexport const KEYWORD = 'KEYWORD'","import React, { Component } from \"react\";\nimport { Table, Input, Icon, Popconfirm } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { dataSource } from \"../store/actions/index\";\n\nclass EditableCell extends Component {\n  state = {\n    value: this.props.value,\n    editable: false\n  };\n  handleChange = e => {\n    const value = e.target.value;\n    this.setState({ value });\n  };\n  check = () => {\n    this.setState({ editable: false });\n    if (this.props.onChange) {\n      this.props.onChange(this.state.value);\n    }\n  };\n  edit = () => {\n    this.setState({ editable: true });\n  };\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"editable-cell\">\n        {editable ? (\n          <div className=\"editable-cell-input-wrapper\">\n            <Input\n              value={value}\n              onChange={this.handleChange}\n              onPressEnter={this.check}\n            />\n            <Icon\n              type=\"check\"\n              className=\"editable-cell-icon-check\"\n              onClick={this.check}\n            />\n          </div>\n        ) : (\n          <div className=\"editable-cell-text-wrapper\">\n            {value || \" \"}\n            <Icon\n              type=\"edit\"\n              className=\"editable-cell-icon\"\n              onClick={this.edit}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass EditableTable extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: \"Name Supplier\",\n        dataIndex: \"name\",\n        width: \"30%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"name\")}\n          />\n        )\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        width: \"40%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"address\")}\n          />\n        )\n      },\n      {\n        title: \"Phone\",\n        dataIndex: \"phone\",\n        width: \"25%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"phone\")}\n          />\n        )\n      },\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        width: \"5%\",\n        render: (text, record) => {\n          return this.props.dataSource.length > 1 ? (\n            <Popconfirm\n              title=\"Sure to delete?\"\n              onConfirm={() => this.onDelete(record.key)}\n            >\n              <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"red\" />\n            </Popconfirm>\n          ) : null;\n        }\n      }\n    ];\n  }\n\n  onCellChange = (key, dataIndex) => {\n    return value => {\n      const dataSource = [...this.props.dataSource];\n      const target = dataSource.find(item => item.key === key);\n      if (target) {\n        target[dataIndex] = value;\n        this.props.onDataSource(dataSource);\n      }\n    };\n  };\n\n  onDelete = key => {\n    const dataSource = [...this.props.dataSource];\n    const supplier = dataSource.filter(item => item.key !== key);\n    this.props.onDataSource(supplier);\n  };\n  \n  render() {\n    return (\n      <div>\n        <Table\n          bordered\n          dataSource={this.props.dataSource}\n          columns={this.columns}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataSource: state.main.dataSource\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { dataSource, keyword } from \"../store/actions/index\";\nimport { Modal, Button, Icon, Form, Input, Row, Col } from \"antd\";\n\nclass AddData extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    isFill: true,\n    validation: {\n      name: \"\",\n      address: \"\",\n      phone: \"\"\n    },\n    supplier: {\n      key: \"\",\n      name: \"\",\n      address: \"\",\n      phone: \"\"\n    }\n  };\n\n  inputHandler = (value, event) => {\n    const supplier = this.state.supplier;\n    const validation = this.state.validation;\n    supplier[value] = event.target.value;\n    validation[value] = event.target.value.length < 1 ? \"error\" : \"success\";\n    this.setState({\n      [supplier]: supplier,\n      [validation]: validation\n    });\n\n    this.state.supplier.name &&\n    this.state.supplier.address &&\n    this.state.supplier.phone\n      ? this.setState({ isFill: false })\n      : this.setState({ isFill: true });\n  };\n\n  _toggleModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  _onRefresh = () => {\n    const keyword = \"hi\";\n    this.props.onKeyword(keyword);\n    this.props.dataSourceTmp.length !== 0\n      ? this.props.onDataSource(this.props.dataSourceTmp)\n      : this.props.onDataSource(this.props.dataSource);\n  };\n\n  _onSave = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      let dataSource = this.props.dataSource;\n\n      const newData = {\n        key: this.props.dataSource.length + 1,\n        name: this.state.supplier.name,\n        address: this.state.supplier.address,\n        phone: this.state.supplier.phone\n      };\n\n      dataSource = [newData, ...dataSource];\n      this.props.onDataSource(dataSource);\n      this.setState({\n        loading: false,\n        visible: false,\n        isFill: true,\n        validation: {\n          name: \"\",\n          address: \"\",\n          phone: \"\"\n        },\n        supplier: {\n          key: \"\",\n          name: \"\",\n          address: \"\",\n          phone: \"\"\n        }\n      });\n    }, 1000);\n  };\n\n  _onCancle = () => {\n    this.setState({\n      loading: false,\n      visible: false,\n      isFill: true,\n      validation: {\n        name: \"\",\n        address: \"\",\n        phone: \"\"\n      },\n      supplier: {\n        key: \"\",\n        name: \"\",\n        address: \"\",\n        phone: \"\"\n      }\n    });\n  };\n\n  render() {\n    const { visible, loading } = this.state;\n\n    return (\n      <div>\n        <Icon\n          type=\"diff\"\n          theme=\"twoTone\"\n          className=\"custom-icon\"\n          onClick={this._toggleModal}\n        />\n        <Icon type=\"reload\" className=\"custom-icon\" onClick={this._onRefresh} />\n\n        <Modal\n          visible={visible}\n          title=\"Supplier Administration\"\n          onOk={this._onSave}\n          onCancel={this._onCancle}\n          width={750}\n          maskClosable={false}\n          footer={[\n            <Button key=\"back\" onClick={this._onCancle}>\n              Cancle\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={loading}\n              disabled={this.state.isFill}\n              onClick={this._onSave}\n            >\n              Save\n            </Button>\n          ]}\n        >\n          <Form layout=\"horizontal\" style={{ textAlign: \"center\" }}>\n            <Row gutter={15}>\n              <Col span={10}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Supplier Name\"\n                  validateStatus={this.state.validation.name}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Supplier Name\"\n                    value={this.state.supplier.name}\n                    onChange={this.inputHandler.bind(this, \"name\")}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={6}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Address\"\n                  validateStatus={this.state.validation.address}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Address\"\n                    value={this.state.supplier.address}\n                    onChange={this.inputHandler.bind(this, \"address\")}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Phone\"\n                  validateStatus={this.state.validation.phone}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Phone\"\n                    type=\"number\"\n                    value={this.state.supplier.phone}\n                    onChange={this.inputHandler.bind(this, \"phone\")}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: \"add_data\" })(AddData);\n\nconst mapStateToProps = state => {\n  return {\n    dataSource: state.main.dataSource,\n    dataSourceTmp: state.main.dataSourceTmp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item)),\n    onKeyword: item => dispatch(keyword(item))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedHorizontalLoginForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { dataSource, dataSourceTmp } from \"../store/actions/index\";\nimport { Button, Input } from \"antd\";\n\nclass Search extends Component {\n  state = {\n    keyword: this.props.keyword\n  };\n\n  searchInput = event => {\n    this.setState({ keyword: event.target.value });\n  };\n\n  _onSearch = () => {\n    this.props.onDataSourceTmp(this.props.dataSource)\n    const data = this.props.dataSource.filter(item => {\n      return item.name.toLowerCase().search(this.state.keyword.toLowerCase()) !== -1;\n    });\n    this.props.onDataSource(data);\n  };\n\n  render() {\n    return (\n      <div>\n        <p style={{ marginBottom: 5 }}>Search Supplier Name</p>\n        <Input\n          value={this.state.keyword}\n          onChange={this.searchInput}\n          style={{ marginBottom: \"1rem\" }}\n        />\n        <Button type=\"primary\" icon=\"search\" block onClick={this._onSearch}>\n          Search\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    dataSource: state.main.dataSource,\n    keyword: state.main.keyword\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item)),\n    onDataSourceTmp: item => dispatch(dataSourceTmp(item))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport EditableTable from \"./components/EditableTable\";\nimport AddData from \"./components/AddData\";\nimport Search from \"./components/Search\";\nimport \"./App.css\";\n\nconst { Content, Sider } = Layout;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Content style={{ padding: \"0 50px\" }}>\n            <Layout style={{ padding: \"24px 0\" }}>\n              <Sider\n                width={200}\n                style={{\n                  background: \"#fff\",\n                  borderRight: \"1px solid #1890FF\",\n                  padding: \"1rem\"\n                }}\n              >\n                <Search />\n              </Sider>\n              <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\n                <AddData />\n                <EditableTable />\n              </Content>\n            </Layout>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DATA_SOURCE, DATA_SOURCE_TMP, KEYWORD } from \"../actions/actionTypes\";\n\nconst initialState = {\n  dataSource: [\n    {\n      key: 1,\n      name: \"Adi Hastanto\",\n      address: \"Kali Bawang\",\n      phone: \"082242703011\"\n    },\n    {\n      key: 2,\n      name: \"Erland Nafid\",\n      address: \"Wonosobo\",\n      phone: \"082242703012\"\n    },\n    {\n      key: 3,\n      name: \"Widayat\",\n      address: \"Sukoharjo\",\n      phone: \"082242703013\"\n    },\n    {\n      key: 4,\n      name: \"Yunus Hayat\",\n      address: \"Watumalang\",\n      phone: \"082242703014\"\n    },\n    {\n      key: 5,\n      name: \"Nur Sofyan\",\n      address: \"Dieng\",\n      phone: \"082242703015\"\n    },\n    {\n      key: 6,\n      name: \"Ismail\",\n      address: \"Pandansari\",\n      phone: \"082242703016\"\n    },\n    {\n      key: 7,\n      name: \"Aditya Ganjar\",\n      address: \"Andongsili\",\n      phone: \"082242703017\"\n    },\n    {\n      key: 8,\n      name: \"Saeful Afgan\",\n      address: \"Keseneng\",\n      phone: \"082242703018\"\n    }\n  ],\n  dataSourceTmp: [],\n  keyword: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DATA_SOURCE:\n      return {\n        ...state,\n        dataSource: action.dataSource\n      };\n\n    case DATA_SOURCE_TMP:\n      return {\n        ...state,\n        dataSourceTmp: action.dataSourceTmp\n      };\n\n    case KEYWORD:\n      return {\n        ...state,\n        keyword: action.keyword\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, compose } from 'redux'\nimport mainReducer from './reducers/main'\n\nconst rootReducer = combineReducers({\n    main: mainReducer\n})\nconst composeEnhancers = compose\nconst configureStore = () => {\n    return createStore(rootReducer, composeEnhancers())\n}\n\nexport default configureStore\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}