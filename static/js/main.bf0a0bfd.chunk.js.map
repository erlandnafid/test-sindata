{"version":3,"sources":["store/actions/main.js","store/actions/actionTypes.js","components/EditableTable.js","components/AddData.js","components/Search.js","App.js","serviceWorker.js","store/reducers/main.js","store/configureStore.js","index.js"],"names":["dataSource","item","type","dataSourceTmp","EditableCell","state","value","props","editable","handleChange","e","target","setState","check","length","onChange","edit","this","className","onPressEnter","onClick","Component","EditableTable","onCellChange","key","dataIndex","find","onDataSource","onDataSourceTmp","onDelete","supplierTmp","filter","columns","title","width","sorter","render","text","record","onConfirm","theme","twoToneColor","bordered","connect","main","dispatch","AddData","loading","visible","isFill","validation","name","address","phone","supplier","inputHandler","event","_toggleModal","_onRefresh","_onSave","setTimeout","Math","random","_onCancle","onOk","onCancel","maskClosable","footer","disabled","layout","style","textAlign","gutter","span","Item","hasFeedback","label","validateStatus","prefix","color","bind","WrappedHorizontalLoginForm","Form","create","console","log","Search","keyword","searchInput","_onSearch","data","toLowerCase","search","marginBottom","icon","block","Content","Layout","Sider","App","padding","background","borderRight","minHeight","Boolean","window","location","hostname","match","initialState","reducer","action","rootReducer","combineReducers","mainReducer","composeEnhancers","compose","store","createStore","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf0a0bfd.chunk.js","sourcesContent":["import { DATA_SOURCE, DATA_SOURCE_TMP } from './actionTypes'\n\nexport const dataSource = (item) => {\n    return {\n        type: DATA_SOURCE,\n        dataSource: item\n    }\n}\n\nexport const dataSourceTmp = (item) => {\n    return {\n        type: DATA_SOURCE_TMP,\n        dataSourceTmp: item\n    }\n}","export const DATA_SOURCE = 'DATA_SOURCE'\nexport const DATA_SOURCE_TMP = 'DATA_SOURCE_TMP'","import React, { Component } from \"react\";\nimport { Table, Input, Icon, Popconfirm } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { dataSource, dataSourceTmp } from \"../store/actions/index\";\n\nclass EditableCell extends Component {\n  state = {\n    value: this.props.value,\n    editable: false\n  };\n  handleChange = e => {\n    const value = e.target.value;\n    this.setState({ value });\n  };\n  check = () => {\n    if (this.state.value.length !== 0) {\n      this.setState({ editable: false });\n      if (this.props.onChange) {\n        this.props.onChange(this.state.value);\n      }\n    }\n  };\n  edit = () => {\n    this.setState({ editable: true });\n  };\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"editable-cell\">\n        {editable ? (\n          <div className=\"editable-cell-input-wrapper\">\n            <Input\n              value={value}\n              onChange={this.handleChange}\n              onPressEnter={this.check}\n            />\n            <Icon\n              type=\"check\"\n              className=\"editable-cell-icon-check\"\n              onClick={this.check}\n            />\n          </div>\n        ) : (\n          <div className=\"editable-cell-text-wrapper\">\n            {value || \" \"}\n            <Icon\n              type=\"edit\"\n              className=\"editable-cell-icon\"\n              onClick={this.edit}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass EditableTable extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: \"Name Supplier\",\n        dataIndex: \"name\",\n        width: \"30%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"name\")}\n          />\n        )\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        width: \"40%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"address\")}\n          />\n        )\n      },\n      {\n        title: \"Phone\",\n        dataIndex: \"phone\",\n        width: \"25%\",\n        sorter: true,\n        render: (text, record) => (\n          <EditableCell\n            value={text}\n            onChange={this.onCellChange(record.key, \"phone\")}\n          />\n        )\n      },\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        width: \"5%\",\n        render: (text, record) => {\n          return this.props.dataSource.length > 1 ? (\n            <Popconfirm\n              title=\"Sure to delete?\"\n              onConfirm={() => this.onDelete(record.key)}\n            >\n              <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"red\" />\n            </Popconfirm>\n          ) : null;\n        }\n      }\n    ];\n  }\n\n  onCellChange = (key, dataIndex) => {\n    return value => {\n      const dataSource = [...this.props.dataSource];\n      const target = dataSource.find(item => item.key === key);\n      if (target) {\n        target[dataIndex] = value;\n        this.props.onDataSource(dataSource);\n        this.props.onDataSourceTmp(dataSource);\n      }\n    };\n  };\n\n  onDelete = key => {\n    const dataSourceTmp = [...this.props.dataSourceTmp];\n    const supplierTmp = dataSourceTmp.filter(item => item.key !== key);\n    this.props.onDataSource(supplierTmp);\n    this.props.onDataSourceTmp(supplierTmp);\n  };\n\n  render() {\n    return (\n      <div>\n        <Table\n          bordered\n          dataSource={this.props.dataSource}\n          columns={this.columns}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataSource: state.main.dataSource,\n    dataSourceTmp: state.main.dataSourceTmp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item)),\n    onDataSourceTmp: item => dispatch(dataSourceTmp(item))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { dataSource, dataSourceTmp } from \"../store/actions/index\";\nimport { Modal, Button, Icon, Form, Input, Row, Col } from \"antd\";\n\nclass AddData extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    isFill: true,\n    validation: {\n      name: \"\",\n      address: \"\",\n      phone: \"\"\n    },\n    supplier: {\n      key: \"\",\n      name: \"\",\n      address: \"\",\n      phone: \"\"\n    }\n  };\n\n  inputHandler = (value, event) => {\n    const supplier = this.state.supplier;\n    const validation = this.state.validation;\n    supplier[value] = event.target.value;\n    validation[value] = event.target.value.length < 1 ? \"error\" : \"success\";\n    this.setState({\n      [supplier]: supplier,\n      [validation]: validation\n    });\n\n    this.state.supplier.name &&\n    this.state.supplier.address &&\n    this.state.supplier.phone\n      ? this.setState({ isFill: false })\n      : this.setState({ isFill: true });\n  };\n\n  _toggleModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  _onRefresh = () => {\n    this.props.onDataSource(this.props.dataSourceTmp)\n  };\n\n  _onSave = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      let dataSourceTmp = this.props.dataSourceTmp;\n\n      const newData = {\n        key: `${this.state.supplier.name}${Math.random()}`,\n        name: this.state.supplier.name,\n        address: this.state.supplier.address,\n        phone: this.state.supplier.phone\n      };\n\n      dataSourceTmp = [newData, ...dataSourceTmp];\n      this.props.onDataSource(dataSourceTmp);\n      this.props.onDataSourceTmp(dataSourceTmp);\n      this.setState({\n        loading: false,\n        visible: false,\n        isFill: true,\n        validation: {\n          name: \"\",\n          address: \"\",\n          phone: \"\"\n        },\n        supplier: {\n          key: \"\",\n          name: \"\",\n          address: \"\",\n          phone: \"\"\n        }\n      });\n    }, 1000);\n  };\n\n  _onCancle = () => {\n    this.setState({\n      loading: false,\n      visible: false,\n      isFill: true,\n      validation: {\n        name: \"\",\n        address: \"\",\n        phone: \"\"\n      },\n      supplier: {\n        key: \"\",\n        name: \"\",\n        address: \"\",\n        phone: \"\"\n      }\n    });\n  };\n\n  render() {\n    const { visible, loading } = this.state;\n\n    return (\n      <div>\n        <Icon\n          type=\"diff\"\n          theme=\"twoTone\"\n          className=\"custom-icon\"\n          onClick={this._toggleModal}\n        />\n        <Icon type=\"reload\" className=\"custom-icon\" onClick={this._onRefresh} />\n\n        <Modal\n          visible={visible}\n          title=\"Supplier Administration\"\n          onOk={this._onSave}\n          onCancel={this._onCancle}\n          width={750}\n          maskClosable={false}\n          footer={[\n            <Button key=\"back\" onClick={this._onCancle}>\n              Cancle\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={loading}\n              disabled={this.state.isFill}\n              onClick={this._onSave}\n            >\n              Save\n            </Button>\n          ]}\n        >\n          <Form layout=\"horizontal\" style={{ textAlign: \"center\" }}>\n            <Row gutter={15}>\n              <Col span={10}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Supplier Name\"\n                  validateStatus={this.state.validation.name}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Supplier Name\"\n                    value={this.state.supplier.name}\n                    onChange={this.inputHandler.bind(this, \"name\")}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={6}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Address\"\n                  validateStatus={this.state.validation.address}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Address\"\n                    value={this.state.supplier.address}\n                    onChange={this.inputHandler.bind(this, \"address\")}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  hasFeedback\n                  label=\"Phone\"\n                  validateStatus={this.state.validation.phone}\n                >\n                  <Input\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    // placeholder=\"Phone\"\n                    type=\"number\"\n                    value={this.state.supplier.phone}\n                    onChange={this.inputHandler.bind(this, \"phone\")}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: \"add_data\" })(AddData);\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    dataSource: state.main.dataSource,\n    dataSourceTmp: state.main.dataSourceTmp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item)),\n    onDataSourceTmp: item => dispatch(dataSourceTmp(item))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedHorizontalLoginForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { dataSource, dataSourceTmp } from \"../store/actions/index\";\nimport { Button, Input } from \"antd\";\n\nclass Search extends Component {\n  state = {\n    keyword: ''\n  };\n\n  searchInput = event => {\n    this.setState({ keyword: event.target.value });\n  };\n\n  _onSearch = () => {\n    const data = this.props.dataSourceTmp.filter(item => {\n      return item.name.toLowerCase().search(this.state.keyword.toLowerCase()) !== -1;\n    });\n    this.props.onDataSource(data);\n    this.setState({ keyword: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <p style={{ marginBottom: 5 }}>Search Supplier Name</p>\n        <Input\n          value={this.state.keyword}\n          onChange={this.searchInput}\n          style={{ marginBottom: \"1rem\" }}\n        />\n        <Button type=\"primary\" icon=\"search\" block onClick={this._onSearch}>\n          Search\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataSource: state.main.dataSource,\n    dataSourceTmp: state.main.dataSourceTmp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataSource: item => dispatch(dataSource(item)),\n    onDataSourceTmp: item => dispatch(dataSourceTmp(item))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport EditableTable from \"./components/EditableTable\";\nimport AddData from \"./components/AddData\";\nimport Search from \"./components/Search\";\nimport \"./App.css\";\n\nconst { Content, Sider } = Layout;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Content style={{ padding: \"0 50px\" }}>\n            <Layout style={{ padding: \"24px 0\" }}>\n              <Sider\n                width={200}\n                style={{\n                  background: \"#fff\",\n                  borderRight: \"1px solid #1890FF\",\n                  padding: \"1rem\"\n                }}\n              >\n                <Search />\n              </Sider>\n              <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\n                <AddData />\n                <EditableTable />\n              </Content>\n            </Layout>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DATA_SOURCE, DATA_SOURCE_TMP } from \"../actions/actionTypes\";\n\nconst initialState = {\n  dataSource: [\n    {\n      key: 1,\n      name: \"Adi Hastanto\",\n      address: \"Kali Bawang\",\n      phone: \"082242703011\"\n    },\n    {\n      key: 2,\n      name: \"Erland Nafid\",\n      address: \"Wonosobo\",\n      phone: \"082242703012\"\n    },\n    {\n      key: 3,\n      name: \"Widayat\",\n      address: \"Sukoharjo\",\n      phone: \"082242703013\"\n    },\n    {\n      key: 4,\n      name: \"Yunus Hayat\",\n      address: \"Watumalang\",\n      phone: \"082242703014\"\n    },\n    {\n      key: 5,\n      name: \"Nur Sofyan\",\n      address: \"Dieng\",\n      phone: \"082242703015\"\n    },\n    {\n      key: 6,\n      name: \"Ismail\",\n      address: \"Pandansari\",\n      phone: \"082242703016\"\n    },\n    {\n      key: 7,\n      name: \"Aditya Ganjar\",\n      address: \"Andongsili\",\n      phone: \"082242703017\"\n    },\n    {\n      key: 8,\n      name: \"Saeful Afgan\",\n      address: \"Keseneng\",\n      phone: \"082242703018\"\n    }\n  ],\n  dataSourceTmp: [\n    {\n      key: 1,\n      name: \"Adi Hastanto\",\n      address: \"Kali Bawang\",\n      phone: \"082242703011\"\n    },\n    {\n      key: 2,\n      name: \"Erland Nafid\",\n      address: \"Wonosobo\",\n      phone: \"082242703012\"\n    },\n    {\n      key: 3,\n      name: \"Widayat\",\n      address: \"Sukoharjo\",\n      phone: \"082242703013\"\n    },\n    {\n      key: 4,\n      name: \"Yunus Hayat\",\n      address: \"Watumalang\",\n      phone: \"082242703014\"\n    },\n    {\n      key: 5,\n      name: \"Nur Sofyan\",\n      address: \"Dieng\",\n      phone: \"082242703015\"\n    },\n    {\n      key: 6,\n      name: \"Ismail\",\n      address: \"Pandansari\",\n      phone: \"082242703016\"\n    },\n    {\n      key: 7,\n      name: \"Aditya Ganjar\",\n      address: \"Andongsili\",\n      phone: \"082242703017\"\n    },\n    {\n      key: 8,\n      name: \"Saeful Afgan\",\n      address: \"Keseneng\",\n      phone: \"082242703018\"\n    }\n  ]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DATA_SOURCE:\n      return {\n        ...state,\n        dataSource: action.dataSource\n      };\n\n    case DATA_SOURCE_TMP:\n      return {\n        ...state,\n        dataSourceTmp: action.dataSourceTmp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, compose } from 'redux'\nimport mainReducer from './reducers/main'\n\nconst rootReducer = combineReducers({\n    main: mainReducer\n})\nconst composeEnhancers = compose\nconst configureStore = () => {\n    return createStore(rootReducer, composeEnhancers())\n}\n\nexport default configureStore\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}